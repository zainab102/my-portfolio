'use client';

import { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import Link from 'next/link';

export default function BlogsPreview({ limit = 3 }) {
  const [blogs, setBlogs] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    let cancelled = false;

    async function fetchBlogs() {
      try {
        const res = await fetch(`/api/blogs?page=1&limit=${limit}`, { cache: 'no-store' });
        if (!res.ok) throw new Error('Failed to load blogs');
        const data = await res.json();
        if (!cancelled) setBlogs(Array.isArray(data.blogs) ? data.blogs : []);
      } catch (e) {
        if (!cancelled) {
          console.error(e);
          setError('Failed to load blogs. Please try again later.');
          setBlogs([]);
        }
      } finally {
        if (!cancelled) setLoading(false);
      }
    }

    fetchBlogs();
    return () => { cancelled = true; };
  }, [limit]);

  const excerpt = (s, n = 100) => {
    if (!s) return '';
    return s.length > n ? s.slice(0, n) + '‚Ä¶' : s;
  };

  const blogCategories = [
    { name: 'Tech Insights', icon: 'üíª', count: 8, color: 'blue' },
    { name: 'Personal Growth', icon: 'üå±', count: 5, color: 'green' },
    { name: 'Industry Trends', icon: 'üìà', count: 3, color: 'purple' }
  ];

  return (
    <section id="blogs" className="py-24 px-6 md:px-12 bg-hero text-gray-900">
      {/* Animated Background Elements */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {/* Section-specific butterflies */}
        {[...Array(4)].map((_, i) => (
          <div
            key={`blogs-butterfly-${i}`}
            className="absolute animate-float opacity-30"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              animationDelay: `${i * 5}s`,
              animationDuration: `${16 + Math.random() * 8}s`,
            }}
          >
            <div className="text-lg animate-wing-flutter filter drop-shadow-sm">
              ü¶ã
            </div>
          </div>
        ))}
      </div>

      {/* Subtle Background Shapes */}
      <div className="absolute inset-0 overflow-hidden opacity-15">
        <div className="absolute top-1/4 left-1/4 w-64 h-64 bg-gradient-to-br from-amber-200 to-orange-200 rounded-full mix-blend-multiply filter blur-3xl animate-blob"></div>
        <div className="absolute bottom-1/3 right-1/5 w-72 h-72 bg-gradient-to-br from-yellow-200 to-amber-200 rounded-full mix-blend-multiply filter blur-3xl animate-blob animation-delay-2000"></div>
      </div>

      <div className="max-w-6xl mx-auto relative z-10">
        {/* Section Title */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
        >
          <h2 className="text-5xl md:text-6xl font-black text-center mb-6 bg-gradient-to-r from-gray-800 via-gray-700 to-gray-900 bg-clip-text text-transparent">
            Latest Blogs
          </h2>
          <div className="section-divider mx-auto mb-12" />
        </motion.div>

        {/* Blog Stats Overview */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          viewport={{ once: true }}
          className="grid md:grid-cols-3 gap-6 mb-12"
        >
          {blogCategories.map((category, index) => (
            <div
              key={index}
              className={`bg-gradient-to-r ${
                category.color === 'blue' ? 'from-blue-50 to-indigo-50 border-blue-200' :
                category.color === 'green' ? 'from-green-50 to-emerald-50 border-green-200' :
                'from-purple-50 to-pink-50 border-purple-200'
              } border-2 rounded-3xl p-6 text-center light-shadow-lg hover:light-shadow-xl transition-all duration-300 hover:scale-105`}
            >
              <div className="text-3xl mb-3">{category.icon}</div>
              <h3 className={`text-xl font-black mb-2 ${
                category.color === 'blue' ? 'text-blue-900' :
                category.color === 'green' ? 'text-green-900' :
                'text-purple-900'
              }`}>
                {category.name}
              </h3>
              <div className={`text-2xl font-black ${
                category.color === 'blue' ? 'text-blue-700' :
                category.color === 'green' ? 'text-green-700' :
                'text-purple-700'
              }`}>
                {category.count} Posts
              </div>
            </div>
          ))}
        </motion.div>

        {/* Loading State */}
        {loading && (
          <div className="grid gap-8 sm:grid-cols-2 lg:grid-cols-3 mb-12">
            {Array.from({ length: Math.min(limit, 3) }).map((_, i) => (
              <div key={i} className="bg-white/90 rounded-3xl overflow-hidden light-shadow-lg animate-pulse">
                <div className="h-48 bg-gray-200" />
                <div className="p-6 space-y-3">
                  <div className="h-6 w-3/4 bg-gray-200 rounded" />
                  <div className="h-4 w-full bg-gray-200 rounded" />
                  <div className="h-4 w-2/3 bg-gray-200 rounded" />
                </div>
              </div>
            ))}
          </div>
        )}

        {/* Error State */}
        {!loading && error && (
          <div className="text-center py-12">
            <div className="bg-red-50 border-2 border-red-200 rounded-3xl p-8 inline-block light-shadow-lg">
              <div className="text-4xl mb-4">üòî</div>
              <p className="text-red-700 font-semibold text-lg">{error}</p>
            </div>
          </div>
        )}

        {/* Empty State */}
        {!loading && !error && blogs.length === 0 && (
          <div className="text-center py-12">
            <div className="bg-white/90 border-2 border-gray-200 rounded-3xl p-8 inline-block light-shadow-lg">
              <div className="text-6xl mb-4">‚úçÔ∏è</div>
              <h3 className="text-2xl font-bold text-gray-800 mb-2">Coming Soon!</h3>
              <p className="text-gray-600 font-medium">Exciting blog posts are in the works. Check back soon for insights on technology, development, and personal growth.</p>
            </div>
          </div>
        )}

        {/* Blog Posts Grid */}
        {!loading && !error && blogs.length > 0 && (
          <>
            <div className="grid gap-8 sm:grid-cols-2 lg:grid-cols-3 mb-12">
              {blogs.map((blog, index) => (
                <motion.article
                  key={blog._id}
                  initial={{ opacity: 0, y: 50 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="group"
                >
                  <div className="bg-white/90 backdrop-blur-lg border-2 border-gray-200 rounded-3xl overflow-hidden light-shadow-xl hover:light-shadow-2xl transition-all duration-300 hover:scale-[1.02] h-full flex flex-col">
                    {/* Blog Thumbnail */}
                    <div className="relative h-48 overflow-hidden">
                      <img
                        src={blog.image || `https://placehold.co/400x300/f3f4f6/1f2937?text=${encodeURIComponent(blog.title.slice(0, 20))}`}
                        alt={`Blog post thumbnail for ${blog.title} - featuring modern design and engaging visual content`}
                        className="h-full w-full object-cover transition-transform duration-500 group-hover:scale-110"
                        loading="lazy"
                        onError={(e) => {
                          e.target.src = `https://placehold.co/400x300/f3f4f6/1f2937?text=${encodeURIComponent(blog.title.slice(0, 20))}`;
                        }}
                      />
                      
                      {/* Overlay Gradient */}
                      <div className="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                      
                      {/* Reading Time Badge */}
                      <div className="absolute top-4 right-4 bg-white/90 backdrop-blur-sm text-gray-800 text-xs font-bold px-3 py-2 rounded-full border border-gray-200 light-shadow">
                        {Math.ceil((blog.content || '').split(' ').length / 200)} min read
                      </div>

                      {/* Category Badge */}
                      <div className="absolute top-4 left-4 bg-amber-500 text-white text-xs font-bold px-3 py-2 rounded-full">
                        Blog Post
                      </div>
                    </div>

                    {/* Content */}
                    <div className="p-6 flex-1 flex flex-col">
                      {/* Blog Title */}
                      <Link href={`/blogs/${blog.slug}`} className="block group-hover:text-amber-700 transition-colors mb-4">
                        <h3 className="text-xl md:text-2xl font-black text-gray-800 tracking-tight leading-tight line-clamp-2">
                          {blog.title}
                        </h3>
                      </Link>

                      {/* Blog Excerpt */}
                      <p className="text-gray-600 text-sm leading-relaxed mb-4 flex-1">
                        {excerpt(blog.summary || blog.content, 100)}
                      </p>

                      {/* Tags */}
                      {blog.tags && blog.tags.length > 0 && (
                        <div className="flex flex-wrap gap-2 mb-4">
                          {blog.tags.slice(0, 3).map((tag, tagIndex) => (
                            <span
                              key={tagIndex}
                              className="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-xs font-semibold border border-gray-200 hover:bg-gray-200 transition-colors"
                            >
                              #{tag}
                            </span>
                          ))}
                        </div>
                      )}

                      {/* Meta Info */}
                      <div className="flex items-center justify-between pt-4 border-t border-gray-200 mt-auto">
                        <div className="flex items-center text-xs text-gray-500">
                          <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 7V3a1 1 0 011-1h6a1 1 0 011 1v4h3a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9a2 2 0 012-2h3z" />
                          </svg>
                          {blog.createdAt ? new Date(blog.createdAt).toLocaleDateString('en-US', {
                            month: 'short',
                            day: 'numeric',
                            year: 'numeric'
                          }) : 'Recent'}
                        </div>
                        <Link
                          href={`/blogs/${blog.slug}`}
                          className="inline-flex items-center text-sm font-bold text-amber-700 hover:text-rose-700 transition-colors group"
                        >
                          Read More 
                          <svg className="w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                          </svg>
                        </Link>
                      </div>
                    </div>
                  </div>
                </motion.article>
              ))}
            </div>

            {/* Blog Insights */}
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.4 }}
              viewport={{ once: true }}
              className="bg-gradient-to-r from-gray-800 to-gray-900 rounded-3xl p-8 mb-12 text-white light-shadow-xl"
            >
              <h3 className="text-3xl font-black text-center text-amber-400 mb-8">What I Write About</h3>
              <div className="grid md:grid-cols-3 gap-8">
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <span className="text-2xl">üí°</span>
                  </div>
                  <h4 className="text-xl font-bold text-blue-400 mb-2">Tech Tutorials</h4>
                  <p className="text-gray-300 text-sm">Step-by-step guides on web development, AI, and programming</p>
                </div>
                
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <span className="text-2xl">üå±</span>
                  </div>
                  <h4 className="text-xl font-bold text-green-400 mb-2">Personal Growth</h4>
                  <p className="text-gray-300 text-sm">Insights on learning, productivity, and professional development</p>
                </div>
                
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <span className="text-2xl">üöÄ</span>
                  </div>
                  <h4 className="text-xl font-bold text-purple-400 mb-2">Industry Insights</h4>
                  <p className="text-gray-300 text-sm">Analysis of tech trends, career advice, and industry observations</p>
                </div>
              </div>
            </motion.div>

            {/* Featured Blog Topics */}
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.6 }}
              viewport={{ once: true }}
              className="bg-white/90 backdrop-blur-lg border-2 border-gray-200 rounded-3xl p-8 mb-12 light-shadow-xl"
            >
              <h3 className="text-2xl font-black text-gray-800 text-center mb-6">Popular Topics</h3>
              <div className="flex flex-wrap gap-4 justify-center">
                {[
                  { name: 'React Development', icon: '‚öõÔ∏è', posts: 5 },
                  { name: 'AI & Machine Learning', icon: 'ü§ñ', posts: 3 },
                  { name: 'Career Growth', icon: 'üìà', posts: 4 },
                  { name: 'Web Development', icon: 'üåê', posts: 6 },
                  { name: 'Python Programming', icon: 'üêç', posts: 4 },
                  { name: 'Digital Marketing', icon: 'üì±', posts: 3 }
                ].map((topic, index) => (
                  <div
                    key={index}
                    className="bg-gradient-to-r from-gray-50 to-white border border-gray-200 rounded-2xl px-4 py-3 hover:from-white hover:to-gray-50 hover:border-gray-300 transition-all duration-300 hover:scale-105 light-shadow group"
                  >
                    <div className="flex items-center space-x-2">
                      <span className="text-lg">{topic.icon}</span>
                      <div>
                        <span className="font-bold text-gray-800 text-sm">{topic.name}</span>
                        <div className="text-xs text-gray-600">{topic.posts} posts</div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </motion.div>
          </>
        )}

        {/* Newsletter Signup */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.8 }}
          viewport={{ once: true }}
          className="bg-white/90 backdrop-blur-lg border-2 border-gray-200 rounded-3xl p-8 mb-12 light-shadow-xl text-center"
        >
          <h3 className="text-2xl font-black text-gray-800 mb-4">Stay Updated</h3>
          <p className="text-gray-600 mb-6">Get notified when I publish new articles and insights</p>
          <div className="max-w-md mx-auto flex gap-4">
            <input
              type="email"
              placeholder="Enter your email"
              className="flex-1 px-4 py-3 bg-white border-2 border-gray-300 rounded-xl text-gray-900 font-medium focus:border-amber-500 focus:ring-2 focus:ring-amber-200 transition-all"
            />
            <button className="px-6 py-3 bg-gradient-to-r from-amber-600 to-rose-600 hover:from-amber-700 hover:to-rose-700 text-white font-bold rounded-xl transition-all duration-300 transform hover:scale-105">
              Subscribe
            </button>
          </div>
        </motion.div>

        {/* View More Button */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 1.0 }}
          viewport={{ once: true }}
          className="text-center"
        >
          <Link
            href="/blogs"
            className="inline-flex items-center px-10 py-5 bg-gradient-to-r from-amber-600 to-rose-600 hover:from-amber-700 hover:to-rose-700 text-white font-bold text-xl rounded-xl transition-all duration-300 transform hover:scale-105 light-shadow-xl hover:shadow-2xl"
          >
            <span>Explore All Articles</span>
            <svg className="ml-4 w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
            </svg>
          </Link>
        </motion.div>
      </div>
    </section>
  );
}
